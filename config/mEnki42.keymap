/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <220>; };

&mt { quick_tap_ms = <220>; };

/ {
    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <220>;
            flavor = "tap-preferred";
        };
    };

    macros {
        t_0: t_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp N0>;
            label = "T_1";
        };

        t_1: t_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp N1>;
            label = "T_2";
        };

        t_2: t_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp N2>;
            label = "T_3";
        };

        t_3: t_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp N3>;
            label = "T_4";
        };

        t_4: t_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp N4>;
            label = "T_5";
        };

        t_c: t_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp C>;
            label = "T_C";
        };

        t_x: t_x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp X &kp Y>;
            label = "T_X";
        };

        t_d: t_d {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp D>;
            label = "T_D";
        };

        t_v: t_v {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp PERCENT>;
            label = "T_V";
        };

        t_h: t_hh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B) &kp DOUBLE_QUOTES>;
            label = "T_HH";
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------
            //| LGUI/] |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | RGUI/[ | 
            //| CTRL/` |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | CTRL/' |
            //| LALT/\ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT/- |
            //                             | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&mt LWIN RBKT    &kp Q  &kp W  &kp E        &kp R            &kp T          &kp Y      &kp U                &kp I         &kp O    &kp P     &ht RWIN LBKT
&mt LCTRL GRAVE  &kp A  &kp S  &kp D        &kp F            &kp G          &kp H      &kp J                &kp K         &kp L    &kp SEMI  &ht RCTRL SQT
&mt LALT BSLH    &kp Z  &kp X  &kp C        &kp V            &kp B          &kp N      &kp M                &kp COMMA     &kp DOT  &kp FSLH  &ht RALT MINUS
                               &lt RSE TAB  &ht LSHFT SPACE  &lt LWR RET  &kp C_MUTE  &lt 1 ESC  &ht RSHFT BACKSPACE  &lt 2 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            //|LGUI/CAPS |  *  |  7 |  8  |  9  |  +  |    |  !  |  @  |  #  |  $  |  %  | RGUI/F1 |
            //|CTRL/MENU |  /  |  4 |  5  |  6  |  -  |    |  ^  |  &  |  *  |  (  |  )  | CTRL/F2 |
            //|  LALT/=  |  0  |  1 |  4  |  3  |  .  |    |  ls |  F4 |  F5 |  F6 |  F7 | RALT/F3 |
            //                      | ADJ | ___ | ___ |    | ___ | ___ | ADJ |

            bindings = <
&ht LWIN EQUAL  &kp N1    &kp N2       &kp N3    &kp N4      &kp N5         &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &ht RWIN MINUS
&ht LCTRL PLUS  &kp EXCL  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &ht RCTRL UNDER
&ht LALT F12    &kp F1    &kp F2       &kp F3    &kp F4      &kp F5         &kp F6     &kp F7         &kp F8        &kp F9                &kp F10                &ht RALT F11
                                       &trans    &trans      &trans     &trans    &trans     &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            //| LGUI |  VOLU  |  PGUP  | PLAY | HOME | ___  |            | ___  | HOME | PLAY| PGUP | VOLU | RGUI |
            //| CTRL |  VOLD  |  LEFT  |  UP  | DOWN | RGHT |            | RGHT | DOWN | UP  | LEFT | VOLD | CTRL | 
            //| LALT |  MUTE  |  PGDN  |  ___ | END  | ___  |            | ___  | END  | ___ | PGDN | MUTE | RALT |
            //                          | ___ | ___  | ADJ  |            | ADJ  | ___  | ___ |

            bindings = <
&kp LWIN   &trans         &trans  &trans  &trans  &trans    &trans    &trans     &trans     &trans     &trans  &kp RWIN
&kp LC(B)  &t_0           &t_1    &t_2    &t_3    &t_4      &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &t_v    &kp RCTRL
&kp LALT   &kp LG(SPACE)  &t_x    &t_c    &trans  &trans    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &t_h    &kp RALT
                                  &trans  &trans  &trans &trans   &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            //| BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR |
            //| BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //|pwrOFF|NUMLK|     |     |     |     |   |     |     |     |     |     |      |
            //                   |     |     |     |   |     |     |     |

            bindings = <
&bootloader        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&ext_power EP_OFF  &kp KP_NUM    &none         &none         &none         &none           &none         &none         &none         &none         &none         &ext_power EP_OFF
                                               &trans        &none         &trans     &trans     &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
